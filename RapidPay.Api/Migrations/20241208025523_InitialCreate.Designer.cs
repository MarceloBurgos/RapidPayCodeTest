// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RapidPay.Infrastructure;

#nullable disable

namespace RapidPay.Api.Migrations
{
    [DbContext(typeof(RapidPayContext))]
    [Migration("20241208025523_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("RapidPay.Domain.Entities.PaymentCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasPrecision(19, 5)
                        .HasColumnType("TEXT");

                    b.Property<long>("Number")
                        .HasMaxLength(15)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PaymentCards", (string)null);
                });

            modelBuilder.Entity("RapidPay.Domain.Entities.PaymentTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasPrecision(19, 5)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Fee")
                        .HasPrecision(19, 5)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PaymentCardId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PaymentCardId");

                    b.ToTable("PaymentTransactions", (string)null);
                });

            modelBuilder.Entity("RapidPay.Domain.Entities.PaymentTransaction", b =>
                {
                    b.HasOne("RapidPay.Domain.Entities.PaymentCard", "Card")
                        .WithMany()
                        .HasForeignKey("PaymentCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
